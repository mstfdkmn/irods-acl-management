#!/usr/bin/env python

import sys
from argparse import ArgumentParser, RawDescriptionHelpFormatter
from src.util import GetiRODSSession
from src.manage_acl import PermissionManager


desc = """Removes all permissions(ACLs) given to an iRODS path 
regardless of whether the provided path is collection or data object.

Example:
iacl-clear /tempZone/home/rods/data.txt
iacl-clear -r /tempZone/home/rods
"""

if len(sys.argv) < 2:
    print('You need to specify an option/argument/parameter!')
    print('Check iacl-clear --help or -h for more information.')
    sys.exit()

arg_parser = ArgumentParser(description=desc,
                            formatter_class=RawDescriptionHelpFormatter)

arg_parser.add_argument('args', nargs='*',
                        help='Provide an absolute iRODS path - collection or data object -\
                              to remove its all attached permissions')

arg_parser.add_argument('-r', '--recursive',
                        help='Provide an absolute iRODS path - collection -to remove \
                              recursively all attached permissions of sub items')

args = arg_parser.parse_args()

with GetiRODSSession() as session:
    for arg in args.args:
        permission_rm = PermissionManager(session, source_path=arg)
        permission_rm.remove_all_acl()
    
    if args.recursive:
            permission_clear_recursive = PermissionManager(session, target_path=args.recursive)
            permission_clear_recursive.remove_all_acl_recursively()
