#!/usr/bin/env python

from argparse import ArgumentParser, RawDescriptionHelpFormatter
from src.util import GetiRODSSession
from src.manage_acl import PermissionManager


desc = """Compare permissions(ACL) of two iRODS paths (collections or data objects)
by listing permissions attached to them.
If paths provided represent collections, then it shows inheritance as bolean.
When -r flag is used then it only shows recursively permissions of collections
themself and their sub collections.

Example:
iacl-compare /tempZone/home/rods /tempZone/home/bob
iacl-compare -r /tempZone/home/rods/coll_A /tempZone/home/bob/coll_B
"""

arg_parser = ArgumentParser(description=desc,
                            formatter_class=RawDescriptionHelpFormatter)

arg_parser.add_argument('args', nargs='*',
                        help='Lists permissions(ACL) existed on an iRODS path to compare with a target path. \
                              Lists only for a given collection and its data objects, including ACLs and inheritance')

arg_parser.add_argument('-r', '--recursive', action='store_false',
                        help='Lists permissions(ACL) existed on an iRODS path recursively. Lists only for collections,\
                              including ACLs and inheritance')

args = arg_parser.parse_args()

with GetiRODSSession() as session:
      if args.args[0] and args.args[1] and args.recursive == True:
            permission_compare_recursive = PermissionManager(session)
            permission_compare_recursive.compare_acl_of_two_collections(
                                          args.args[0], args.args[1])

      if args.recursive == False:
        permission_compare_recursive = PermissionManager(session)
        permission_compare_recursive.compare_acl_of_two_collections_recursively(
                                        args.args[0], args.args[1])
